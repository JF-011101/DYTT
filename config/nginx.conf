
#user  nobody;
 worker_processes                       1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
events {
    worker_connections                  1024;
}


http {
    include                             mime.types;
    default_type                        application/octet-stream;
    sendfile                            on;
    keepalive_timeout                   65;
    proxy_cache_path                    /usr/local/nginx/conf/cache levels=1:2 keys_zone=minio_cache:100m max_size=10g inactive=5d; #设置缓存 -缓存路径usr/local/nginx/conf/cache
    gzip                                on;

    #                                   自定义变量 $connection_upgrade
    map $http_upgrade $connection_upgrade {
        default                         keep-alive; # 默认为keep-alive 可以支持 一般http请求
        'websocket'                     upgrade; # 如果为websocket 则为 upgrade 可升级的。
    }

    upstream minio {
        server                          minio1:9000;
        server                          minio2:9000;
        server                          minio3:9000;
        server                          minio4:9000;
    }

    #                                   minio console loadbalancer
    upstream console {
        ip_hash;
        server                          minio1:9001;
        server                          minio2:9001;
        server                          minio3:9001;
        server                          minio4:9001;
    }

    server {
        listen                          9000;
        listen                          [::]:9000;
        server_name                     localhost;
        ignore_invalid_headers          off;
        #                               配置成上传文件不限制大小
        client_max_body_size            0;
        proxy_buffering                 off;

        error_page                      500 502 503 504 /50x.html;
        location = /50x.html {
            root                        html;
        }
        location ~^/ {
            proxy_set_header            Authorization $http_authorization;
            proxy_set_header            Host $http_host;
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_set_header            X-Real-PORT $remote_port;
            proxy_set_header            X-Forwarded-Host $host:$server_port;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Proto $scheme;
            proxy_set_header            Connection "";

            proxy_connect_timeout       300;
            chunked_transfer_encoding   off;
            proxy_ignore_client_abort   on;
            proxy_http_version          1.1;

            rewrite                     ^/(.*)$ /$1 break;
            proxy_pass                  http://minio;
        }
        #                               直接访问/eop返回404
        location = /eop {
            return                      404;
        }
        #                               直接访问/eop/返回404
        location = /eop/ {
            return                      404;
        }

    }

    server {
        listen                          9001;
        listen                          [::]:9001;
        server_name                     localhost;

        #                               To allow special characters in headers
        ignore_invalid_headers          off;
        #                               Allow any size file to be uploaded.
        client_max_body_size            0;
        #                               To disable buffering
        proxy_buffering                 off;

        location / {
            proxy_set_header            Authorization $http_authorization;
            proxy_set_header            Host $http_host;
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_set_header            X-Real-PORT $remote_port;
            proxy_set_header            X-Forwarded-Host $host:$server_port;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Forwarded-Proto $scheme;
            proxy_set_header            X-NginX-Proxy true;

            #                           This is necessary to pass the correct IP to be hashed
            real_ip_header              X-Real-IP;

            proxy_connect_timeout       300;

            #                           To support websocket
            proxy_http_version          1.1;
            proxy_set_header            Upgrade $http_upgrade;
            proxy_set_header            Connection "upgrade";

            chunked_transfer_encoding   off;

            proxy_pass                  http://console;
        }
    }

}